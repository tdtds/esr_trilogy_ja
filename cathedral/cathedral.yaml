# review-epubmaker向けの設定ファイルの例。
# yamlファイルをReVIEWファイルのある場所に置き、
# 「review-epubmaker yamlファイル」を実行すると、<bookname>.epubファイルが
# 生成されます。
# このファイルはUTF-8エンコーディングで記述してください。

# ブック名(ファイル名になるもの。ASCII範囲の文字を使用)
bookname: cathedral
# 書名
booktitle: 伽藍とバザール (The Cathedral and the Bazaar)
# 著者
aut: Eric S. Raymond
# 以下はオプション
# prt: 出版社
# asn: Associated name
# ant: Bibliographic antecedent
# clb: 貢献者
edt: TADA Tadashi
# dsr: デザイナ
# ill: イラストレータ
# pht: 撮影者
trl: 山形浩生 YAMAGATA Hiroo
# date: 2000-05-02
rights: Permission is granted to copy, distribute and/or modify this document under the terms of the Open Publication License, version 2.0.
# description: ブックの説明
#
# coverfile: カバーページのbody要素内に挿入する内容を記述したファイル名
#
coverimage: cover.jpg
#
# 固有IDに使用するドメイン。指定しない場合には、時刻に基づくランダムUUIDが入る
# urnid: urn:uid:http://example.com/some-book-title/1.0.2/
# CSSファイル (yamlファイルおよびReVIEWファイルを置いたディレクトリにあること)
stylesheet: stylesheet.css
# LaTeX用のスタイルファイル(styディレクトリ以下に置くこと)
# texstyle: samplemacro
# LaTeX用のdocumentclassを指定する
# texdocumentclass: ["jsarticle", "b5paper,oneside"]
# 目次として抽出するレベル
toclevel: 3
# セクション番号を表示するレベル
secnolevel: 2
# EPUBのバージョン(現時点では2または3。デフォルトは2)
epubversion: 2
# HTMLのバージョン(現時点では4または5。デフォルトは4。epubversionを3にした場合は自動で5に設定される)
htmlversion: 4
# EPUB標準の目次以外に目次を作成するか
# mytoc: nil
# 奥付を作成するか。デフォルトでは作成されない。trueを指定するとデフォルトの奥付、ファイル名を指定するとそれがcolophon.htmlとしてコピーされる
# colophon: true
# XHTML生成後に実行するプログラム。$1:HTMLの生成されたディレクトリ $2:ReVIEWファイルのあるディレクトリ $3:起動時指定のyamlファイル名
# posthook: hook.sh
# EPUBで表紙をコンテンツに含めるか。デフォルト(no)では作成されない。yesにするとiBooks等でも最初に表紙が表示されるようになる
# cover_linear: yes
# review-compileに渡すパラメータ
params: --stylesheet=sample.css
# デバッグフラグ。nilでないときには一時ファイルをカレントディレクトリに作成し、削除もしない
# debug: nil
